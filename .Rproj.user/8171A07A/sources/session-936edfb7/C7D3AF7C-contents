# Icon list. - https://fontawesome.com/v4/icons/

library(shiny)
library (shinydashboard)

# load external scripts
source("Scripts/EDA.R")
source("Scripts/LSTM.R")

# Define UI for application that draws a histogram
ui <- dashboardPage(
  
  dashboardHeader(
    title= div(h4('#KOT COVID-19 Vaccine Tweets', style="margin: 0;"), h5('Visualisations and sentiment analysis results', style="margin: 1;")), 
    titleWidth = 300, 
    
    # Increase height of the dashboard header
    tags$li(class="dropdown", 
            tags$style(".main-header {max-height: 50px}"),
            tags$style(".main-header .logo {height: 50px}"))
  ),
  
  # Sidebar
  dashboardSidebar(width = 300, 
    sidebarMenu(menuItem("Visualisations", tabName = "visualisations", icon = icon("line-chart")), 
                menuItem("LSTM model results", tabName = "ml", icon = icon("hashtag")), 
                menuItem("About the dashboard", tabName = "about", icon = icon("sticky-note")))
  ),
  
  dashboardBody(
    tags$head(
      tags$link(rel = "stylesheet", type = "text/css", href = "style.css")
    ),
    tabItems(tabItem(tabName = "visualisations", 
                     
                     # Row 1
                     fluidRow(
                       box(width = 12, height = NULL, solidHeader = T, status = "primary", plotOutput("TCtweets"))
                     ), 
                     
                     # Row 2
                     fluidRow(
                       box(width = 7, solidHeader = T, plotOutput("locationbarplot")),
                       box(width = 5, solidHeader = T, plotOutput("WChashtags"))
                     ),
                      
                     # Row 3
                     fluidRow(
                       box(width = 6, solidHeader = T, status = "primary" ,plotOutput("WCunigrams")),
                       box(width = 6, solidHeader = T, status = "primary", plotOutput("networkbigram")),
                     ),
                     
                     # Row 4
                     fluidRow(
                       box(width = 12, solidHeader = T,  DTOutput("trigramtable"))
                     )
                     
                     ),
             
             tabItem(tabName = "ml", h2("LSTM Results")), 
             tabItem(tabName = "about", h2("About section")))
  ),
  
  
  # Title on the browser
  title = "COVID-19 Vaccine Tweets Data Dashboard"
)


# Define server logic required to draw a histogram
server <- function(input, output) {
  
  # Row 1 plots ####
  output$WChashtags <- renderPlot({
    wordcloudHashtags
  })
  
  output$WCunigrams <- renderPlot({
    unigram.wordcloud
  })
  
  
  # Row 2 plots
  output$TCtweets <- renderPlot({
    time.series.tweets
  })
  
  # Row 3 plots
  output$TCtweets <- renderPlot({
    time.series.tweets
  })
  
  # Row 4
  output$networkbigram <- renderPlot({
    bigram.network
  })
  
  output$locationbarplot <- renderPlot({
    loc.sentiscore
  })
  
  
  # render Table
  output$trigramtable <- renderDT({
    DT::datatable(trigram.df, caption = "Table of trigrams", filter='top', extensions = 'Buttons', options =  list(pageLength=5, searching=FALSE, dom='Bfrtip', buttons=c('excel', 'pdf'), class='display'), 
                  colnames = c("1st word", "2nd word", "3rd word", "Count"))
  })
  

  
  
  
  
  

}

# Run the application 
shinyApp(ui = ui, server = server)
